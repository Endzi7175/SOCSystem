//created on: May 19, 2019
package sbnz.rules
import com.sbnz.SIEMCenter2.model.LogEntry
import com.sbnz.SIEMCenter2.model.AlarmTriggered
import com.sbnz.SIEMCenter2.model.MaliciousIpAddress
import com.sbnz.SIEMCenter2.service.AlarmTriggeredService;
import java.util.ArrayList
global ArrayList<AlarmTriggered> alarms;
global AlarmTriggeredService alarmService;

//rule "A stand alone rule"

  // when
    //    l : LogEntry( userId == "1", myMsg : message )
   // then
       // System.out.println( myMsg );
        //l.setMessage( "Goodbye cruel world" );
        

//end
rule "Vise od 2 neuspesnih prijava od strane jednog korisnika"
    when
        $l1: LogEntry(message.equals("Neuspesna prijava na sistem"), $m: message, $id: userId)
        not (AlarmTriggered(customerId == $id,  type == AlarmTriggered.VISE_OD_2_PRIJAVE_ISTI_KORISNIK))
        Number(intValue >= 2) from accumulate(
            $l2: LogEntry(
                this != $l1, 
                message == $m,
                userId == $id, 
                this meets[1h30m] $l1
            ),
            count($l2)
        )
        
    then
    	alarmService.save(new AlarmTriggered($id, "3 neuspela pokusaja prijave", AlarmTriggered.VISE_OD_2_PRIJAVE_ISTI_KORISNIK));
        System.out.println("Alarm: vise od 3 neuspelih prijava od stane korisnika" + $id);
    	insert(new AlarmTriggered($id, "3 neuspela pokusaja prijave", AlarmTriggered.VISE_OD_2_PRIJAVE_ISTI_KORISNIK));
end
rule "Vise od 4 neuspesnih prijava od na istoj masini"
    when
        $l1: LogEntry(message.equals("Neuspesna prijava na sistem"),  $m: message, $ip: ipAddress)
        not (AlarmTriggered(customerId == $ip, type == AlarmTriggered.VISE_OD_4_PRIJAVE_ISTA_MASINA))
        Number(intValue >= 4) from accumulate(
            $l2: LogEntry(
                this != $l1, 
                message == $m,
                ipAddress == $ip, 
                this meets[1h30m] $l1
            ),
            count($l2)
        )
        
    then
    	alarmService.save(new AlarmTriggered($ip, "Neuspesna prijava na istoj masini", AlarmTriggered.VISE_OD_4_PRIJAVE_ISTA_MASINA));
        System.out.println("Alarm: vise od 4 neuspelih prijava na istoj masini");
    	insert(new AlarmTriggered($ip, "Neuspesna prijava na istoj masini, ip" + $ip, AlarmTriggered.VISE_OD_4_PRIJAVE_ISTA_MASINA));
end
rule "Pojava loga koji je tipa error log level = 1 kad je error"
    when
    	
        LogEntry(logLevel == 1,id == null, $m: message, $id: userId)
    then
    	
    	alarmService.save(new AlarmTriggered($id, "Greska u programu: " + $m, AlarmTriggered.ERROR));
    	System.out.println("Alarm: greska u programu");
    	
    	insert(new AlarmTriggered($id, "Greska u programu: " + $m, AlarmTriggered.ERROR));
end
rule "Neuspesan pokusaj prijave na sistem od stane korisnika koji nije bio aktivan vise od 90 dana"
    when
        $l1 : LogEntry(message.equals("Neuspesna prijava na sistem"), $m: message, $id: userId)
        not (AlarmTriggered(customerId == $id, type == AlarmTriggered.POKUSAJ_PRIJAVE_NEAKTIVAN_KORISNIK))
        Number(intValue == 0) from accumulate(
            $l2: LogEntry(
                this != $l1, 
                message.equals("Uspesna prijava na sistem"),
                userId == $id, 
                this meets[90d] $l1
            ),
            count($l2)
        ) 
        //not (LogEntry())
        //
        //not(LogEntry(message.equals("Neuspesna prijava na sistem"), userId == $id, this meets[90d] $l1))
        //$l3 : (LogEntry(message.equals("Neuspesna prijava na sistem"), userId == $id, this before[90d] $l2)
        //not (AlarmTriggered(customerId == $id))
        
    then
    	alarmService.save(new AlarmTriggered($id, "Neuspesna prijava na sistem od strane neaktivnog korisnika", AlarmTriggered.POKUSAJ_PRIJAVE_NEAKTIVAN_KORISNIK));
        System.out.println("Alarm: Neuspesna prijava na sistem od strane neaktivnog korisnika " + $id);
    	insert(new AlarmTriggered($id, "Neuspesna prijava na sistem od strane neaktivnog korisnika", AlarmTriggered.POKUSAJ_PRIJAVE_NEAKTIVAN_KORISNIK));
end
//sredi
rule "Vise od 15 neuspesnih prijava na razlicite delove informacionog sistema sa iste ip adrese"
    when
        $l1: LogEntry(message.equals("Neuspesna prijava na sistem"),  $m: message, $ip: ipAddress, $isType : informationSystemType)
        not (AlarmTriggered(customerId == $ip, type == AlarmTriggered.VISE_OD_15_PRIJAVA_RAZLICITI_SISTEMI))
        Number(intValue >= 4) from accumulate(
            $l2: LogEntry(
                this != $l1, 
                message == $m,
                ipAddress == $ip,
                informationSystemType !=  $isType,
                this meets[5d] $l1
            ),
            count($l2)
        )
        
    then
    	alarmService.save(new AlarmTriggered($ip, "Neuspesna prijava na razlicite informacione sisteme sa iste ip adrese", AlarmTriggered.VISE_OD_15_PRIJAVA_RAZLICITI_SISTEMI));
        System.out.println("Alarm: vise od 15 neuspesnih prijava na razlicite informacione sisteme sa iste ip adrese");
    	insert(new AlarmTriggered($ip, "Neuspesna prijava na razlicite informacione sisteme sa iste ip adrese" + $ip, AlarmTriggered.VISE_OD_15_PRIJAVA_RAZLICITI_SISTEMI));
end
rule "Neuklonjen virus"
    when
        $l1: LogEntry(message.equals("Virus"),  $m: message, $ip: ipAddress)
        not (LogEntry(message.equals("Uklonjen virus"),ipAddress == $ip, this meets[1h] $l1))
        //not (AlarmTriggered(customerId == $ip, type == AlarmTriggered.VIRUS))
        
    then
    	alarmService.save(new AlarmTriggered($ip, "Virus nije uklonjen", AlarmTriggered.VIRUS));
        System.out.println("Virus nije uklonjen");
    	insert(new AlarmTriggered($ip, "Neuspesna prijava na razlicite informacione sisteme sa iste ip adrese" + $ip, AlarmTriggered.VIRUS));
end
rule "Vise od 7 pretnji virusa za isti ip"
    when
        $l1: LogEntry(message.equals("Virus"),  $m: message, $ip: ipAddress)
        not (AlarmTriggered(customerId == $ip, type == AlarmTriggered.POJAVLJIVANJE_VIRUSA))
        Number(intValue >= 4) from accumulate(
            $l2: LogEntry(
                this != $l1, 
                message == $m,
                ipAddress == $ip,
                this meets[7d] $l1
            ),
            count($l2)
        )
    then
    	alarmService.save(new AlarmTriggered($ip, "Vise od 7 pretnji atnivisrusa u roku od 7 dana", AlarmTriggered.POJAVLJIVANJE_VIRUSA));
        System.out.println("Vise od 7 pretnji atnivisrusa u roku od 7 dana");
    	insert(new AlarmTriggered($ip, "Vise od 7 pretnji atnivisrusa u roku od 7 dana" + $ip, AlarmTriggered.POJAVLJIVANJE_VIRUSA));
end
rule "Pojava loga sa maliciozne ip adrese"
	when
		$l1 : LogEntry($ip:ipAddress)
		$mip : MaliciousIpAddress(ip.equals($ip))
	then
		alarmService.save(new AlarmTriggered($ip, "Pojava loga sa maliciozne ip adrese", AlarmTriggered.POJAVLJIVANJE_VIRUSA));
        System.out.println("Pojava loga sa maliciozne ip adrese");
    	insert(new AlarmTriggered($ip, "Pojava loga sa maliciozne ip adrese" + $ip, AlarmTriggered.POJAVLJIVANJE_VIRUSA));
	
end



