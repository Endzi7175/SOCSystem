
template header

rule
ruleNum
alarmMessage
count
interval

package com.sbnz.SIEMCenter2;
import com.sbnz.SIEMCenter2.model.LogEntry
import com.sbnz.SIEMCenter2.model.AlarmTriggered
import com.sbnz.SIEMCenter2.service.AlarmTriggeredService;
import java.util.ArrayList
import java.util.Date;
global ArrayList<AlarmTriggered> alarms;
global AlarmTriggeredService alarmService;

template "alert"

rule "alert_@{ruleNum}"
when
     $l1 : LogEntry(@{rule}, $userId: userId)
     $actualCount : Number()
        			from accumulate ($l2 : LogEntry(@{rule}) over window:time(@{interval}), count($l2))
      eval($actualCount.intValue() >= ${count})
then
     alarmService.save(new AlarmTriggered($userId, "@{alarmMessage}", @{ruleNum}, new Date()));
end

end template
